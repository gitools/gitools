/*
 *  Copyright 2010 Universitat Pompeu Fabra.
 * 
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 * 
 *       http://www.apache.org/licenses/LICENSE-2.0
 * 
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *  under the License.
 */

/*
 * OverlappingPage.java
 *
 * Created on 25-mar-2010, 17:40:59
 */

package org.gitools.ui.analysis.groupcomparison.wizard;

import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComponent;
import org.gitools.matrix.model.element.IElementAttribute;
import org.gitools.stats.mtc.BenjaminiHochbergFdr;
import org.gitools.stats.mtc.Bonferroni;
import org.gitools.stats.mtc.MTC;
import org.gitools.stats.test.MannWhitneyWilxoxonTest;
import org.gitools.stats.test.Test;
import org.gitools.ui.IconNames;
import org.gitools.ui.platform.IconUtils;
import org.gitools.ui.platform.wizard.AbstractWizardPage;

public class GroupComparisonSelectAttributePage extends AbstractWizardPage {
	private List<IElementAttribute> attrs;

	private static class TestElement {
		public Test test;
		public TestElement(Test test) {
			this.test = test;
		}
		@Override
		public String toString() {
			return this.test.getName();
		}

		public Test getTest() {
			return this.test;
		}
	};

	private static class MTCElement {
		public MTC mtc;
		public MTCElement(MTC mtc) {
			this.mtc = mtc;
		}
		@Override
		public String toString() {
			return this.mtc.getName();
		}

		public MTC getMTC() {
			return this.mtc;
		}
	};

	private static class AttrOption {
		private String name;
		private IElementAttribute attr;

		public AttrOption(String name) {
			this.name = name;
		}

		public AttrOption(IElementAttribute attr) {
			this.attr = attr;
		}

		public IElementAttribute getAttr() {
			return attr;
		}

		@Override
		public String toString() {
			return attr != null ? attr.getName() : name;
		}
	}

    public GroupComparisonSelectAttributePage() {
		super();

		initComponents();

		setTitle("Select data and statistical test");

		setLogo(IconUtils.getImageIconResourceScaledByHeight(IconNames.LOGO_METHOD, 96));

		setComplete(true);

		testCbox.setModel(new DefaultComboBoxModel(new TestElement[] {
			new TestElement(new MannWhitneyWilxoxonTest())
		}));

		mtcCb.setModel(new DefaultComboBoxModel(new MTCElement[]{
			new MTCElement(new BenjaminiHochbergFdr()),
			new MTCElement(new Bonferroni())
		}));


	}

	public Test getTest() {
		TestElement testElement = (TestElement) testCbox.getModel().getSelectedItem();
		return testElement.getTest();
	}

	public MTC getMtc() {
		MTCElement mtcElement = (MTCElement) mtcCb.getModel().getSelectedItem();
		return mtcElement.getMTC();
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        applyGroup = new javax.swing.ButtonGroup();
        attributeLabel = new javax.swing.JLabel();
        attributeCb = new javax.swing.JComboBox();
        testCbox = new javax.swing.JComboBox();
        attributeLabel1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        mtcCb = new javax.swing.JComboBox();

        attributeLabel.setText("Take values from");

        testCbox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mann-Whitney-Wilcoxon" }));
        testCbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testCboxActionPerformed(evt);
            }
        });

        attributeLabel1.setText("Select Test");

        jLabel1.setText("Multiple test correction");

        mtcCb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Bonferroni", "Benjamini Hochberg FDR" }));
        mtcCb.setSelectedIndex(1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(attributeLabel)
                        .addGap(59, 59, 59)
                        .addComponent(attributeCb, 0, 342, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(attributeLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(testCbox, 0, 342, Short.MAX_VALUE)
                            .addComponent(mtcCb, 0, 342, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(attributeLabel)
                    .addComponent(attributeCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(testCbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(attributeLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(mtcCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

	private void testCboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testCboxActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_testCboxActionPerformed

	@Override
	public JComponent createControls() {
		return this;
	}

	private boolean isValidNumber(String text) {
		try {
			Double.parseDouble(text);
		}
		catch (NumberFormatException ex) {
			return false;
		}
		return true;
	}


	public void setAttributes(List<IElementAttribute> attrs) {
		this.attrs = attrs;

		if (attrs != null) {
			AttrOption[] pvalueAttrs = new AttrOption[attrs.size()];

			for (int i = 0; i < attrs.size(); i++)
				pvalueAttrs[i] = new AttrOption(attrs.get(i));

			attributeCb.setModel(new DefaultComboBoxModel(pvalueAttrs));
			attributeCb.setSelectedIndex(0);
			attributeCb.setEnabled(true);
			attributeCb.setVisible(true);
			attributeLabel.setVisible(true);
		}
		else
			dissableAttrCb();
	}

	private void dissableAttrCb() {
		attributeCb.setModel(new DefaultComboBoxModel());
		attributeCb.setEnabled(false);
		attributeCb.setVisible(false);
		attributeLabel.setVisible(false);
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup applyGroup;
    private javax.swing.JComboBox attributeCb;
    private javax.swing.JLabel attributeLabel;
    private javax.swing.JLabel attributeLabel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox mtcCb;
    public javax.swing.JComboBox testCbox;
    // End of variables declaration//GEN-END:variables

	public int getAttributeIndex() {
		return attributeCb.getSelectedIndex();
	}

}
