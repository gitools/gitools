/*
 *  Copyright 2010 Universitat Pompeu Fabra.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *  under the License.
 */

/*
 * CobwebParamsDialog2.java
 *
 * Created on May 4, 2010, 3:01:12 PM
 */

package org.gitools.ui.dialog.clustering;


import java.util.Properties;
import org.gitools.ui.platform.dialog.MessageStatus;

public class CobwebParamsDialog extends javax.swing.JDialog {

	/** A return status code - returned if Cancel button has been pressed */
	public static final int RET_CANCEL = 0;
	/** A return status code - returned if OK button has been pressed */
	public static final int RET_OK = 1;
	private int returnStatus = RET_CANCEL;


	private ClusteringDialog parent;


    /** Creates new form cobwebParamsPanel */
    public CobwebParamsDialog(ClusteringDialog parent, Properties values) {

		super(parent);
		setModal(true);

        initComponents();

		headerCompo.setTitle("Herarchical Clustering parameters");
		headerCompo.setMessage("Modify default values to increase/reduce expected clusters");
		this.parent = parent;

		validate();

		if (values != null) setValuesParameters(values);


    }

	private void setValuesParameters(Properties values){

		cutOffField.setText(values.getProperty("cutoff"));
		seedField.setText(values.getProperty("seedCobweb"));
		acuityField.setText(values.getProperty("acuity"));
		
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        seedField = new javax.swing.JTextField();
        acuityField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cutOffField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        headerCompo = new org.gitools.ui.platform.dialog.DialogHeaderPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Parameters");
        setLocationByPlatform(true);

        cancelButton.setText("Cancel");
        cancelButton.setDefaultCapable(false);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        seedField.setText("42");
        seedField.setToolTipText("Set a random value used to start clustering method");

        acuityField.setText("0.5");
        acuityField.setToolTipText("Set the minimum standard deviation of a node of the tree with an only \ninstance.");

        jLabel2.setText("Cutoff: ");
        jLabel2.setToolTipText("Set the category utility threshold by which to prune nodes.");

        cutOffField.setText("0.0028");
        cutOffField.setToolTipText("Set the category utility threshold by which to prune nodes.");

        jLabel3.setText("Seed: ");
        jLabel3.setToolTipText("Set a random value used to start clustering method");

        jLabel1.setText("Acuity: ");
        jLabel1.setToolTipText("Set the minimum standard deviation of a node of the tree with an only \ninstance.\n");

        jLabel4.setFont(new java.awt.Font("DejaVu LGC Sans", 0, 10)); // NOI18N
        jLabel4.setText("(Hint: decrease this value to obtain more clusters)");

        jLabel5.setFont(new java.awt.Font("DejaVu LGC Sans", 0, 10)); // NOI18N
        jLabel5.setText("(Hint: decrease this value to obtain more clusters)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerCompo, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(acuityField, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(cutOffField, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel3)
                        .addGap(17, 17, 17)
                        .addComponent(seedField, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerCompo, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(acuityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cutOffField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seedField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
		doClose(RET_CANCEL);
}//GEN-LAST:event_cancelButtonActionPerformed

	private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
		Properties params =  new Properties();

		if (isValidNumber(cutOffField.getText()) && cutOffField.getText() != null && !cutOffField.getText().equals("")){			
			if (isValidInteger(seedField.getText()) && seedField.getText() != null && !seedField.getText().equals("")){				
				if (isValidNumber(acuityField.getText()) && acuityField.getText() != null && !acuityField.getText().equals(""))	{

					params.put("cutoff",cutOffField.getText());
					params.put("seedCobweb",seedField.getText());
					params.put("acuity",acuityField.getText());

					parent.setParams(params);

					doClose(RET_OK);					
				}else{

				headerCompo.setMessageStatus(MessageStatus.ERROR);
				headerCompo.setMessage("Invalid acuity value, it should be a real number");}
			}else{

				headerCompo.setMessageStatus(MessageStatus.ERROR);
				headerCompo.setMessage("Invalid seed value, it should be an integer number");}
		}else{
			
			headerCompo.setMessageStatus(MessageStatus.ERROR);
			headerCompo.setMessage("Invalid cutoff value, it should be a real number");
		}

}//GEN-LAST:event_okButtonActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField acuityField;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField cutOffField;
    private org.gitools.ui.platform.dialog.DialogHeaderPanel headerCompo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField seedField;
    // End of variables declaration//GEN-END:variables


	private void doClose(int retStatus) {
		returnStatus = retStatus;
		setVisible(false);
		dispose();
	}

	private boolean isValidNumber(String text) {
		try {
			Double.parseDouble(text);
		}
		catch (NumberFormatException ex) {
			return false;
		}
		return true;
	}

	private boolean isValidInteger(String text) {
		try {
			Integer.parseInt(text);
		} catch (NumberFormatException ex) {
			return false;
		}
		return true;
	}

	public int getReturnStatus() {
		return returnStatus;
	}

}
