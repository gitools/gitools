/*
 *  Copyright 2010 Universitat Pompeu Fabra.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *  under the License.
 */

/*
 * NewJDialog.java
 *
 * Created on May 4, 2010, 2:45:35 PM
 */

package org.gitools.ui.dialog.clustering;

import java.util.List;
import java.util.Properties;
import javax.swing.DefaultComboBoxModel;
import org.gitools.matrix.model.element.IElementAttribute;
import org.gitools.ui.IconNames;
import org.gitools.ui.platform.IconUtils;

public class ClusteringDialog extends javax.swing.JDialog {

	// model wrappers
	private static class MatrixAttributeWrapper {

		private IElementAttribute attribute;

		public MatrixAttributeWrapper(IElementAttribute a) {
			this.attribute = a;
		}

		public IElementAttribute getMatrixAttribute() {
			return attribute;
		}

		public void setMatrixAttribute(IElementAttribute a) {
			this.attribute = a;
		}

		@Override
		public String toString() {
			return attribute.getName();
		}
	}
	/** A return status code - returned if Cancel button has been pressed */
	public static final int RET_CANCEL = 0;
	/** A return status code - returned if OK button has been pressed */
	public static final int RET_OK = 1;
	private int returnStatus = RET_CANCEL;
	private Properties params = new Properties();

	/** Creates new form clusteringPage */
	public ClusteringDialog(java.awt.Window parent) {

		super(parent);
		setModal(true);

		initComponents();

		headerCompo.setTitle("Data clustering");
		headerCompo.setLeftLogo(IconUtils.getImageIconResourceScaledByHeight(IconNames.LOGO_METHOD,64));
		headerCompo.setMessage("Perform a hierarchical or partitional clustering");
		validate();

		setDefaultParamsValue();

	}


	/** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
	public int getReturnStatus() {
		return returnStatus;
	}


	private void doClose(int retStatus) {
		returnStatus = retStatus;
		setVisible(false);
		dispose();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        cancelButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        okButton = new javax.swing.JButton();
        dataClustCombo = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        algorithmTypeCombo = new javax.swing.JComboBox();
        rowsRadio = new javax.swing.JRadioButton();
        columnsRadio = new javax.swing.JRadioButton();
        headerCompo = new org.gitools.ui.platform.dialog.DialogHeaderPanel();
        cbPreprocessing = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setTitle("Clustering");
        setLocationByPlatform(true);

        cancelButton.setText("Cancel");
        cancelButton.setDefaultCapable(false);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Values from:");

        jButton1.setText("Config ...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Apply to:");

        jLabel3.setText("Method:");

        algorithmTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hierarchical clustering", "K-means" }));
        algorithmTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                algorithmTypeComboActionPerformed(evt);
            }
        });

        buttonGroup1.add(rowsRadio);
        rowsRadio.setText("rows");

        buttonGroup1.add(columnsRadio);
        columnsRadio.setSelected(true);
        columnsRadio.setText("columns");

        cbPreprocessing.setSelected(true);

        jLabel1.setText("Dimensionality reduction preprocess :");

        jLabel2.setFont(new java.awt.Font("DejaVu LGC Sans", 0, 10)); // NOI18N
        jLabel2.setText("(Check it for faster clustering)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerCompo, javax.swing.GroupLayout.DEFAULT_SIZE, 501, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(40, 40, 40)
                        .addComponent(algorithmTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dataClustCombo, 0, 379, Short.MAX_VALUE))
                    .addComponent(rowsRadio)
                    .addComponent(columnsRadio)
                    .addComponent(jLabel5))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbPreprocessing)
                .addContainerGap(196, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(344, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerCompo, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(algorithmTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jButton1))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(dataClustCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(14, 14, 14)
                        .addComponent(columnsRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rowsRadio)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1))
                    .addComponent(cbPreprocessing))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
		doClose(RET_CANCEL);
}//GEN-LAST:event_cancelButtonActionPerformed

	private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
		doClose(RET_OK);
}//GEN-LAST:event_okButtonActionPerformed

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

		if (algorithmTypeCombo.getSelectedItem().toString().toLowerCase().equals("k-means")){
			KmeansParamsDialog dlg = new KmeansParamsDialog(this,params);
			dlg.setVisible(true);

		}else{
			CobwebParamsDialog dlg = new CobwebParamsDialog(this,params);
			dlg.setVisible(true);
		}


	}//GEN-LAST:event_jButton1ActionPerformed

	private void algorithmTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_algorithmTypeComboActionPerformed

	}//GEN-LAST:event_algorithmTypeComboActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox algorithmTypeCombo;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelButton;
    private javax.swing.JCheckBox cbPreprocessing;
    private javax.swing.JRadioButton columnsRadio;
    private javax.swing.JComboBox dataClustCombo;
    private org.gitools.ui.platform.dialog.DialogHeaderPanel headerCompo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton okButton;
    private javax.swing.JRadioButton rowsRadio;
    // End of variables declaration//GEN-END:variables


	public Properties getParams() {
		return params;
	}

	public void setParams(Properties params) {
		this.params.putAll(params);
	}

	public Properties getClusterParameters() {

		Properties clusterParams = new Properties();

		clusterParams.put("method", algorithmTypeCombo.getSelectedItem().toString().toLowerCase());
		clusterParams.put("index", dataClustCombo.getSelectedIndex() + "");
		clusterParams.put("transpose", rowsRadio.isSelected()+"");
		clusterParams.put("preprocessing", cbPreprocessing.isSelected() + "");

		if (algorithmTypeCombo.getSelectedItem().toString().toLowerCase().equals("k-means")) {

			clusterParams.put("iterations", params.getProperty("iterations","500"));
			clusterParams.put("seedKmeans", params.getProperty("seedKmeans","10"));
			clusterParams.put("k", params.getProperty("k","2"));
			clusterParams.put("distance", params.getProperty("distance","euclidean"));
			clusterParams.put("classIndex", params.getProperty("classIndex","-1"));

		}else{

			clusterParams.put("cutoff", params.getProperty("cutoff","0.0028"));
			clusterParams.put("seedCobweb", params.getProperty("seedCobweb","42"));
			clusterParams.put("acuity", params.getProperty("acuity","0.5"));
			clusterParams.put("classIndex", params.getProperty("classIndex","0")); //Per cobWeb ha de valdre 0
		}

		return clusterParams;
	}

	public void setAttributes(List<IElementAttribute> cellAttributes, int index) {

		DefaultComboBoxModel model = new DefaultComboBoxModel();
		MatrixAttributeWrapper attrWrapper = null;
		for (IElementAttribute attr : cellAttributes) {
			attrWrapper = new MatrixAttributeWrapper(attr);
			model.addElement(attrWrapper);
		}

		dataClustCombo.setModel(model);
		dataClustCombo.setSelectedIndex(index);

	}

	public boolean isTransposeEnabled() {
		return rowsRadio.isSelected();
	}

	private void setDefaultParamsValue(){

		params.setProperty("iterations","500");
		params.setProperty("seedKmeans","10");
		params.setProperty("seedCobweb","42");
		params.setProperty("k","2");
		params.setProperty("distance","euclidean");
		params.setProperty("cutoff","0.0028");
		params.setProperty("acuity","0.5");
	}
}

