/*
 *  Copyright 2011 Universitat Pompeu Fabra.
 * 
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 * 
 *       http://www.apache.org/licenses/LICENSE-2.0
 * 
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *  under the License.
 */

/*
 * HetamapSearchPanel.java
 *
 * Created on 23-feb-2011, 9:07:45
 */
package org.gitools.ui.heatmap.panel.search;

import javax.swing.event.DocumentEvent;
import org.gitools.heatmap.model.Heatmap;
import org.gitools.matrix.model.AnnotationMatrix;
import org.gitools.matrix.model.IMatrixView;
import org.gitools.ui.utils.DocumentChangeListener;

public class HetamapSearchPanel extends javax.swing.JPanel {

	private Heatmap hm;

	/** Creates new form HetamapSearchPanel */
	public HetamapSearchPanel(Heatmap hm) {
		this.hm = hm;

		initComponents();

		searchText.getDocument().addDocumentListener(new DocumentChangeListener() {
			@Override
			protected void update(DocumentEvent e) {
				updateSearch();
			}
		});
	}

	private void updateSearch() {
		// do nothing
	}

	private void searchNext() {
		IMatrixView mv = hm.getMatrixView();
		int leadRow = mv.getLeadSelectionRow();
		int leadCol = mv.getLeadSelectionColumn();

		if (leadRow != -1 && leadCol == -1) {// Row search
			AnnotationMatrix am = hm.getRowDim().getAnnotations();

			int index = leadRow + 1;
			if (index >= mv.getRowCount())
				index = 0;
			boolean found = false;
			while (index != leadRow && !found) {
				String label = mv.getRowLabel(index);
				
			}
		} else if (leadRow == -1 && leadCol != -1) {// Column search

		} else if (leadRow != -1 && leadCol != -1) {// Cell search
			
		}
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        closeBtn = new javax.swing.JButton();
        searchText = new javax.swing.JTextField();
        prevBtn = new javax.swing.JButton();
        nextBtn = new javax.swing.JButton();

        setFocusable(false);
        setRequestFocusEnabled(false);

        closeBtn.setText("X");
        closeBtn.setFocusable(false);

        prevBtn.setText("< Previous");
        prevBtn.setFocusable(false);

        nextBtn.setText("> Next");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(closeBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prevBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextBtn)
                .addContainerGap(536, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeBtn)
                    .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prevBtn)
                    .addComponent(nextBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeBtn;
    private javax.swing.JButton nextBtn;
    private javax.swing.JButton prevBtn;
    private javax.swing.JTextField searchText;
    // End of variables declaration//GEN-END:variables
}
