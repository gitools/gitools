/*
 *  Copyright 2011 Universitat Pompeu Fabra.
 * 
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 * 
 *       http://www.apache.org/licenses/LICENSE-2.0
 * 
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *  under the License.
 */

/*
 * TextLabelsConfigPage.java
 *
 * Created on 09-mar-2011, 14:41:13
 */

package org.gitools.ui.heatmap.header.wizard;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import org.gitools.heatmap.HeatmapDim;
import org.gitools.heatmap.header.HeatmapTextLabelsHeader;
import org.gitools.ui.platform.dialog.FontChooserDialog;
import org.gitools.ui.platform.wizard.AbstractWizardPage;
import org.gitools.ui.utils.FontUtils;

public class TextLabelsConfigPage extends AbstractWizardPage {

	private HeatmapDim hdim;
	private HeatmapTextLabelsHeader header;

	private Font font;

    public TextLabelsConfigPage(HeatmapDim hdim, HeatmapTextLabelsHeader header) {
		this.hdim = hdim;
		this.header = header;
		
        initComponents();

		fontBtn.addActionListener(new ActionListener() {
			@Override public void actionPerformed(ActionEvent e) {
				selectFont(); }
		});

		setTitle("Header configuration");
		setComplete(true);
    }

	@Override
	public void updateControls() {
		font = header.getFont();
		fontChanged();
		fgColor.setColor(header.getLabelColor());
	}

	@Override
	public void updateModel() {
		header.setFont(font);
		header.setLabelColor(fgColor.getColor());
	}

	private void fontChanged() {
		fontField.setText(FontUtils.fontText(font));
		fontField.setFont(font);
	}

	private void selectFont() {
		FontChooserDialog dlg =
				new FontChooserDialog(null, header.getFont());
		dlg.setVisible(true);

		if (dlg.isCancelled())
			return;

		font = dlg.getFont();
		fontChanged();
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        fontField = new javax.swing.JTextField();
        fontBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        fgColor = new org.gitools.ui.platform.component.ColorChooserLabel();

        jLabel2.setText("Font");

        fontField.setEditable(false);

        fontBtn.setText("...");

        jLabel1.setText("Color");

        fgColor.setColor(new java.awt.Color(1, 1, 1));
        fgColor.setPreferredSize(new java.awt.Dimension(28, 28));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fontField, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fontBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fgColor, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fontField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fontBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fgColor, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(318, 318, 318))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.gitools.ui.platform.component.ColorChooserLabel fgColor;
    private javax.swing.JButton fontBtn;
    private javax.swing.JTextField fontField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

}
