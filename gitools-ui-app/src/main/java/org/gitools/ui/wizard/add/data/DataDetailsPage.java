/*
 *  Copyright 2011 cperez.
 * 
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 * 
 *       http://www.apache.org/licenses/LICENSE-2.0
 * 
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *  under the License.
 */

/*
 * LabelFilterPage.java
 *
 * Created on 22-mar-2011, 15:54:05
 */
package org.gitools.ui.wizard.add.data;

import javax.swing.event.DocumentEvent;
import org.gitools.heatmap.Heatmap;
import org.gitools.matrix.model.element.IElementAdapter;
import org.gitools.matrix.model.element.IElementAttribute;
import org.gitools.ui.platform.dialog.MessageStatus;
import org.gitools.ui.platform.wizard.AbstractWizardPage;
import org.gitools.ui.utils.DocumentChangeListener;

public class DataDetailsPage extends AbstractWizardPage {

    private Heatmap hm;
    private String dimensionName;
    private String message;

    public DataDetailsPage(Heatmap hm) {
            this.hm = hm;

            initComponents();
            setComplete(false);

            setTitle("Data Dimension Integration");
            this.message =  "Choose a name for the new data value dimension";
            setMessage(message);

            nameField.getDocument().addDocumentListener(new DocumentChangeListener() {

                    @Override
                    protected void update(DocumentEvent e) {
                        nameChanged();
                    }
             });
    }


    private void nameChanged() {
        if (nameField.getText().length() > 0) {

            boolean everythingIsOk = true;
            String existingName;
            String originalWantedName = nameField.getText();
            String wantedName = originalWantedName.toLowerCase().trim();
            IElementAdapter adapter = hm.getMatrixView().getCellAdapter();
            int c = 0;
            for (IElementAttribute iElementAttribute : adapter.getProperties()) {
                existingName = iElementAttribute.getName().toLowerCase();
                if (existingName.equals(wantedName)) {
                    setMessage(MessageStatus.ERROR, "Data dimension with name '"+originalWantedName+"' already exists");
                    everythingIsOk = false;
                    break;
                }
            }
            
            if (everythingIsOk)    {
                setComplete(true);
                setMessage(MessageStatus.INFO,message);
                dimensionName = nameField.getText();
            }
        } else {
            setComplete(false);
            dimensionName = "";
        }
    }

    public String getDimensionName() {
        return dimensionName;
    }

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        applyGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();

        jLabel1.setText("Name");

        nameField.setText("Integrated values");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(384, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(408, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup applyGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField nameField;
    // End of variables declaration//GEN-END:variables



}
