

# Be sure to be on 'develop' branch
git checkout develop

# Pull and push all commits
git pull
git push

# Start a new release or hotfix
git-flow release start gitools-1.7.0
git-flow hotfix start gitools-1.7.0

# Publish the release or hotfix branch
git-flow release publish gitools-1.7.0
git-flow hotfix publish gitools-1.7.0

# Update pom.xml version
# The following command only prints to display
# Check that you are going to update only the correct versions:
find . -name pom.xml | awk '{ system("sed 0,/1.7.0-SNAPSHOT/s//1.7.0/ "$0)}' | grep -A2 -B3 1.7.0

# The following command will apply the changes
# Update all like this:
find . -name pom.xml | awk '{ system("sed -i 0,/1.7.0-SNAPSHOT/s//1.7.0/ "$0)}'

# Compile and package 
mvn clean package install
mvn package assembly:assembly

# Test new release
cd target
unzip gitools-1.7.0-bin.zip
gitools-1.7.0/bin/gitools

# Deploy Webstart
# change back to the gitools root folder
./webstart-deploy.sh 1.7.0

# Deploy ZIP file
scp target/gitools-1.7.0-bin.zip bgadmin@ankara:/usr/local/gitools/www/download/

# Update this file on the server:
/usr/local/gitools/www/download/latest.txt

# Commit the changes
git commit -a -m "Set version to 1.7.0"

# Finish the release or hotfix and push everything
git flow release finish -p gitools-1.7.0
git flow hotfix finish -p gitools-1.7.0

# Check that you are on develop branch
git checkout develop 

# Update pom.xml versions to new SNAPSHOT version

# Check that you are going to update only the correct versions:
find . -name pom.xml | awk '{ system("sed 0,/1.7.0/s//1.7.1-SNAPSHOT/ "$0)}' | grep -A2 -B3 1.7.1-SNAPSHOT

# Update all like this:
find . -name pom.xml | awk '{ system("sed -i 0,/1.7.0/s//1.7.1-SNAPSHOT/ "$0)}'

# Commit
git commit -a -m "Next iteration version 1.7.1-SNAPSHOT"

# Push develop
git push






