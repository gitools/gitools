# Be sure to be on 'develop' branch
git checkout develop

# Pull and push all commits
git pull
git push

# Start a new release or hotfix
git-flow release start gitools-1.8.4
git-flow hotfix start gitools-1.8.4

# Update pom.xml version
# The following command only prints to display
# Check that you are going to update only the correct versions:
find . -name pom.xml | awk '{ system("sed 0,/1.9.0-SNAPSHOT/s//1.8.4/ "$0)}' | grep -A2 -B3 1.8.4

# The following command will apply the changes
# Update all like this:
find . -name pom.xml | awk '{ system("sed -i 0,/1.9.0-SNAPSHOT/s//1.8.4/ "$0)}'

# Compile and package 
mvn clean install assembly:assembly

# Test new release
cd target
unzip gitools-1.8.4-bin.zip
gitools-1.8.4/bin/gitools
cd ..

# Deploy ZIP file
scp target/gitools-1.8.4-bin.zip bgadmin@ankara:/usr/local/gitools/www/download/

# Deploy Webstart
# change back to the gitools root folder
./webstart-deploy.sh 1.8.4

# Update this file on the server:
/usr/local/gitools/www/download/latest.txt

# Commit the changes
git commit -a -m "Set version to 1.8.4"

# Finish the release or hotfix
git flow release finish gitools-1.8.4
git flow hotfix finish gitools-1.8.4

# Check that you are on develop branch
git checkout develop 

# Update pom.xml versions to new SNAPSHOT version

# Check that you are going to update only the correct versions:
find . -name pom.xml | awk '{ system("sed 0,/1.8.4/s//1.9.0-SNAPSHOT/ "$0)}' | grep -A2 -B3 1.9.0-SNAPSHOT

# Update all like this:
find . -name pom.xml | awk '{ system("sed -i 0,/1.8.4/s//1.9.0-SNAPSHOT/ "$0)}'

# Commit
git commit -a -m "Next iteration version 1.9.0-SNAPSHOT"

# Push develop
git push 
git push origin gitools-1.8.4






