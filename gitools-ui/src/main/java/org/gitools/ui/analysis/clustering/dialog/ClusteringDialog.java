/*
 *  Copyright 2010 xrafael.
 * 
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 * 
 *       http://www.apache.org/licenses/LICENSE-2.0
 * 
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *  under the License.
 */


package org.gitools.ui.analysis.clustering.dialog;

import java.awt.BorderLayout;
import java.util.List;
import java.util.Properties;
import javax.swing.DefaultComboBoxModel;
import org.gitools.analysis.clustering.ClusteringAnalysis;
import org.gitools.matrix.model.element.IElementAttribute;


public class ClusteringDialog extends javax.swing.JDialog {

		// Biomart model wrappers
	private static class MatrixAttributeWrapper {

		private IElementAttribute attribute;

		public MatrixAttributeWrapper(IElementAttribute a) {
			this.attribute = a;
		}

		public IElementAttribute getMatrixAttribute() {
			return attribute;
		}

		public void setMatrixAttribute(IElementAttribute a) {
			this.attribute = a;
		}

		@Override
		public String toString() {
			return attribute.getName();
		}

	}

    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;

    private int returnStatus = RET_CANCEL;

    /** Creates new form clusteringPage */
    public ClusteringDialog(java.awt.Window parent) {
		
        super(parent);
		setModal(true);

		initComponents();

		CobwebParamsPanel cwPanel = new CobwebParamsPanel();

		paramsPanel.setLayout(new BorderLayout());

		paramsPanel.add(cwPanel);

		validate();

    }

    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }

	public void showKmeans() {
		KmeansParamsPanel cwPanel = new KmeansParamsPanel();
		paramsPanel.removeAll();
		paramsPanel.setLayout(new BorderLayout());
		paramsPanel.add(cwPanel);
		validate();
	}

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }
	

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        applayGroup = new javax.swing.ButtonGroup();
        paramsPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rowsRadio = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        columnsRadio = new javax.swing.JRadioButton();
        algorithmTypeCombo = new javax.swing.JComboBox();
        clusterTypeCombo = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        dataClustCombo = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setTitle("Clustering analysis");
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(442, 472));

        javax.swing.GroupLayout paramsPanelLayout = new javax.swing.GroupLayout(paramsPanel);
        paramsPanel.setLayout(paramsPanelLayout);
        paramsPanelLayout.setHorizontalGroup(
            paramsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 418, Short.MAX_VALUE)
        );
        paramsPanelLayout.setVerticalGroup(
            paramsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 201, Short.MAX_VALUE)
        );

        jLabel3.setText("Method :");

        applayGroup.add(rowsRadio);
        rowsRadio.setSelected(true);
        rowsRadio.setText("rows");

        jLabel2.setText("Clustering type :");

        applayGroup.add(columnsRadio);
        columnsRadio.setText("columns");

        algorithmTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CobWeb" }));
        algorithmTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                algorithmTypeComboActionPerformed(evt);
            }
        });

        clusterTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hierarchical", "Partitional" }));
        clusterTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clusterType(evt);
            }
        });

        jLabel5.setText("Apply to:");

        jLabel6.setText("Data for Clustering :");

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.setDefaultCapable(false);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Parameters :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(paramsPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rowsRadio)
                                .addGap(18, 18, 18)
                                .addComponent(columnsRadio))
                            .addComponent(clusterTypeCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, 288, Short.MAX_VALUE)
                            .addComponent(algorithmTypeCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, 288, Short.MAX_VALUE)
                            .addComponent(dataClustCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, 288, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(dataClustCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clusterTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(algorithmTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(columnsRadio)
                        .addComponent(rowsRadio)))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(paramsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 6, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

	private void algorithmTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_algorithmTypeComboActionPerformed

		if (algorithmTypeCombo.getSelectedItem().toString().toLowerCase().equals("cobweb"))		
			showCobWeb();		
		else
			if (algorithmTypeCombo.getSelectedItem().toString().toLowerCase().equals("k-means"))
				showKmeans();
		
	}//GEN-LAST:event_algorithmTypeComboActionPerformed

	private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
		doClose(RET_OK);
}//GEN-LAST:event_okButtonActionPerformed

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
		doClose(RET_CANCEL);
}//GEN-LAST:event_cancelButtonActionPerformed

	private void clusterType(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clusterType

		if(clusterTypeCombo.getSelectedItem().toString().toLowerCase().equals("hierarchical"))
		{
			DefaultComboBoxModel model = new DefaultComboBoxModel();

			model.addElement("CobWeb");

			algorithmTypeCombo.setModel(model);

			showCobWeb();
		}
		else
		if(clusterTypeCombo.getSelectedItem().toString().toLowerCase().equals("partitional"))
		{
			DefaultComboBoxModel model = new DefaultComboBoxModel();

			model.addElement("K-Means");

			algorithmTypeCombo.setModel(model);			

			showKmeans();

		}

	}//GEN-LAST:event_clusterType


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox algorithmTypeCombo;
    private javax.swing.ButtonGroup applayGroup;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox clusterTypeCombo;
    private javax.swing.JRadioButton columnsRadio;
    private javax.swing.JComboBox dataClustCombo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton okButton;
    private javax.swing.JPanel paramsPanel;
    private javax.swing.JRadioButton rowsRadio;
    // End of variables declaration//GEN-END:variables


	private void showCobWeb(){

			CobwebParamsPanel cwPanel = new CobwebParamsPanel();

			paramsPanel.removeAll();

			paramsPanel.setLayout(new BorderLayout());

			paramsPanel.add(cwPanel);

			validate();
	}

	private void showKnmeans(){

			KmeansParamsPanel cwPanel = new KmeansParamsPanel();

			paramsPanel.removeAll();

			paramsPanel.setLayout(new BorderLayout());

			paramsPanel.add(cwPanel);

			validate();
	}

	public ClusteringAnalysis getAnalysis() {
		ClusteringAnalysis a = new ClusteringAnalysis();

		// Execute clustering for matrixView
		Properties params = new Properties();
		params.put("type", clusterTypeCombo.getSelectedItem().toString().toLowerCase());
		params.put("method",algorithmTypeCombo.getSelectedItem().toString().toLowerCase());
		params.put("index",((MatrixAttributeWrapper) dataClustCombo.getSelectedItem()).getMatrixAttribute().getId());

		if (algorithmTypeCombo.getSelectedItem().toString().toLowerCase().equals("cobweb"))
		{

			params.put("cutoff",((CobwebParamsPanel) this.paramsPanel.getComponents()[0]).getCutoff());
			params.put("seed",((CobwebParamsPanel) this.paramsPanel.getComponents()[0]).getSeed());
			params.put("acuity",((CobwebParamsPanel) this.paramsPanel.getComponents()[0]).getAcuity());
		}

		if (algorithmTypeCombo.getSelectedItem().toString().toLowerCase().equals("k-means"))
		{

			params.put("iterations",((KmeansParamsPanel) this.paramsPanel.getComponents()[0]).getIterations());
			params.put("seed",((KmeansParamsPanel) this.paramsPanel.getComponents()[0]).getSeed());
			params.put("k",((KmeansParamsPanel) this.paramsPanel.getComponents()[0]).getKclusters());
			params.put("distance",((KmeansParamsPanel) this.paramsPanel.getComponents()[0]).getDistanceMethod());
		}

		a.setParams(params);

		a.setApplyToColumns(columnsRadio.isSelected());

		a.setApplyToRows(rowsRadio.isSelected());
		
		return a;
	}

	public void setAttributes(List<IElementAttribute> cellAttributes) {

		DefaultComboBoxModel model = new DefaultComboBoxModel();
		MatrixAttributeWrapper attrWrapper = null;
		for (IElementAttribute attr : cellAttributes){
			attrWrapper = new MatrixAttributeWrapper(attr);
			model.addElement(attrWrapper);
		}

		dataClustCombo.setModel(model);

	}


}
